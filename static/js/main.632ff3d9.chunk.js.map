{"version":3,"sources":["App.js","index.js"],"names":["initialGoals","id","title","minis","idm","name","accompli","App","goals","setGoals","useState","React","createElement","className","FormAddGoal","onAddGoal","goal","Tracker","data","_ref","setTitle","onSubmit","e","preventDefault","newGoal","crypto","randomUUID","type","value","onChange","target","_ref2","map","Goal","key","Button","_ref3","children","onClick","FormAddMini","_ref4","onAddMini","setName","newMini","_ref5","showAddMini","setShowAddMini","miniGoals","setMiniGoals","totalMini","length","nbAccompli","filter","item","percentAccompli","Math","round","handleToggleMini","miniG","handleDeleteMini","console","log","mini","Minigoal","onChangeAccompli","onDeleteMini","miniGoal","show","_ref6","checked","style","textDecoration","rootElement","document","getElementById","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.632ff3d9.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport \"./styles.css\";\n\nconst initialGoals = [\n  {\n    id: 1,\n    title: \"Good Job\",\n    minis: [\n      { idm: 1, name: \"Linkedin\", accompli: false },\n      {\n        idm: 2,\n        name: \"Resume\",\n        accompli: true,\n      },\n      { idm: 3, name: \"Github\", accompli: true },\n      { idm: 4, name: \"Cover Letter\", accompli: false },\n      { idm: 5, name: \"Portfolio\", accompli: false },\n    ],\n  },\n];\n\nexport default function App() {\n  const [goals, setGoals] = useState(initialGoals);\n\n  function handleAddGoal(goal) {\n    setGoals((goals) => [...goals, goal]);\n  }\n\n  return (\n    <div className=\"container\">\n      <FormAddGoal onAddGoal={handleAddGoal} />\n      <Tracker data={goals} />\n    </div>\n  );\n}\n\nfunction FormAddGoal({ onAddGoal }) {\n  const [title, setTitle] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!title) return;\n\n    const newGoal = {\n      id: crypto.randomUUID(),\n      title,\n      minis: [],\n    };\n\n    onAddGoal(newGoal);\n\n    setTitle(\"\");\n  }\n\n  return (\n    <form className=\"form-add-Goal\" onSubmit={handleSubmit}>\n      <label>Goal</label>\n      <input\n        type=\"text\"\n        value={title}\n        onChange={(e) => setTitle(e.target.value)}\n      />\n      <button>Add</button>\n    </form>\n  );\n}\n\nfunction Tracker({ data }) {\n  return (\n    <div className=\"goal\">\n      {data.map((goal) => (\n        <Goal title={goal.title} minis={goal.minis} key={goal.id} />\n      ))}\n    </div>\n  );\n}\n\nfunction Button({ children, onClick }) {\n  return (\n    <button className=\"button\" onClick={onClick}>\n      {children}\n    </button>\n  );\n}\n\nfunction FormAddMini({ onAddMini }) {\n  const [name, setName] = useState(\"\");\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!name) return;\n\n    const newMini = {\n      idm: crypto.randomUUID(),\n      name,\n      accompli: false,\n    };\n\n    onAddMini(newMini);\n\n    setName(\"\");\n  }\n\n  return (\n    <form className=\"form-add-Goal\" onSubmit={handleSubmit}>\n      <label>Minigoal</label>\n      <input\n        type=\"text\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <Button>Add</Button>\n    </form>\n  );\n}\n\nfunction Goal({ title, minis }) {\n  const [showAddMini, setShowAddMini] = useState(false);\n  const [miniGoals, setMiniGoals] = useState(minis);\n  //const [checkMini, setCheckMini] = useState(false);\n\n  const totalMini = miniGoals.length;\n  const nbAccompli = miniGoals.filter((item) => item.accompli).length;\n  const percentAccompli = Math.round((nbAccompli / totalMini) * 100);\n\n  function handleAddMini(miniGoal) {\n    setMiniGoals((miniGoals) => [...miniGoals, miniGoal]);\n  }\n\n  function handleShowAddMini(show) {\n    setShowAddMini((show) => !show);\n  }\n\n  function handleToggleMini(id) {\n    setMiniGoals((miniGoals) =>\n      miniGoals.map((miniG) =>\n        miniG.idm === id ? { ...miniG, accompli: !miniG.accompli } : miniG\n      )\n    );\n\n    //console.log(miniGoals);\n  }\n\n  function handleDeleteMini(id) {\n    setMiniGoals((miniGoals) => miniGoals.filter((miniG) => miniG.idm !== id));\n    console.log(miniGoals);\n  }\n\n  return (\n    <div className={`open ${percentAccompli === 100 ? \"completed\" : \"\"}`}>\n      <div className=\"goal-header\">\n        <span className=\"title\">{title}</span>\n        <span className=\"rate\">{percentAccompli || 0}%</span>\n      </div>\n      <div className=\"content-box\">\n        <ul className=\"minis\">\n          {miniGoals.map((mini) => (\n            <Minigoal\n              id={mini.idm}\n              name={mini.name}\n              accompli={mini.accompli}\n              key={mini.idm}\n              onChangeAccompli={handleToggleMini}\n              onDeleteMini={handleDeleteMini}\n            />\n          ))}\n        </ul>\n        {showAddMini && <FormAddMini onAddMini={handleAddMini} />}\n        {<Button onClick={handleShowAddMini}>{showAddMini ? \"-\" : \"+\"}</Button>}\n      </div>\n    </div>\n  );\n}\n\nfunction Minigoal({ id, name, accompli, onChangeAccompli, onDeleteMini }) {\n  return (\n    <li className=\"item\">\n      <input\n        type=\"checkbox\"\n        checked={accompli}\n        onChange={() => onChangeAccompli(id)}\n      />\n      <span style={accompli ? { textDecoration: \"line-through\" } : {}}>\n        {name}\n      </span>\n      <button onClick={() => onDeleteMini(id)}>x</button>\n    </li>\n  );\n}\n","import React from \"react\";\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}